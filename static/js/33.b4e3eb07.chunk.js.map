{"version":3,"file":"static/js/33.b4e3eb07.chunk.js","mappings":"4PAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wQAeVE,EAAmBF,EAAAA,GAAAA,QAAH,0CAIhBG,EAAkBH,EAAAA,GAAAA,IAAH,0CAIfI,EAAiBJ,EAAAA,GAAAA,IAAH,yK,SCqC3B,EArDqB,WAAO,IAAD,IACzB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAEzCC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAASP,GAASQ,MAAK,SAAAC,GACrB,OAAOV,EAASU,EACjB,GACF,GAAE,CAACT,IAEJ,IAAQU,EAAgEZ,EAAhEY,YAAaC,EAAmDb,EAAnDa,aAAcC,EAAqCd,EAArCc,SAAUC,EAA2Bf,EAA3Be,OAAQC,EAAmBhB,EAAnBgB,eACrD,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIb,EAAV,sBACA,UAACR,EAAD,YACE,yBACGgB,IACC,gBACEM,IAAG,0CAAqCN,GACxCO,IAAI,SACJC,MAAM,WAIZ,UAACvB,EAAD,YACE,wBAAKmB,KACL,yCAAgC,GAAfH,GAAmBQ,UAApC,QACA,uCACA,uBAAIP,KACJ,oCACA,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG9C,UAAC3B,EAAD,YACE,oDACA,2BACE,yBACE,SAACL,EAAD,CAAYwB,GAAG,QAAf,qBAEF,yBACE,SAACxB,EAAD,CAAYwB,GAAG,UAAf,2BAGJ,SAAC,EAAAS,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,WAKT,C,6LC3DKC,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIC,EAAtB,+BAAoC,GAApC,kBAEOH,EAAAA,GAAAA,IAAA,UAClBE,EADkB,oBACEH,EADF,YACaI,IAHpB,cAEVC,EAFU,yBAMTA,EAAStB,MANA,gCAQhB,IAAIuB,MAAM,aARM,yDAAH,qDAYJC,EAAc,WAEzB,OAAOL,EADU,sBAElB,EAEYrB,EAAW,SAAAP,GACtB,IAAM6B,EAAQ,gBAAY7B,GAC1B,OAAO4B,EAAYC,EACpB,EAEYK,EAAe,SAAAlC,GAC1B,IAAM6B,EAAQ,gBAAY7B,EAAZ,YACd,OAAO4B,EAAYC,EACpB,EAEYM,EAAkB,SAAAnC,GAC7B,IAAM6B,EAAQ,gBAAY7B,EAAZ,YACd,OAAO4B,EAAYC,EACpB,EAEYO,EAAiB,SAAAC,GAC5B,IACMP,EAAW,iBAAaO,GAC9B,OAAOT,EAFO,eAEeE,EAC9B,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkStyled = styled(NavLink)`\n  display: block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: blue;\n  text-decoration: underline;\n\n  &.active {\n    text-decoration: none;\n    color: black;\n    text-shadow: 2px 2px 4px #000000;\n    font-size: 20px;\n  }\n`;\n\nexport const MovieInformation = styled.section`\n  display: flex;\n`;\n\nexport const MovieDecription = styled.div`\n  padding: 20px;\n`;\n\nexport const AddInformation = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  border-top: 1px solid grey;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovie } from 'services/Api';\nimport {\n  LinkStyled,\n  MovieDecription,\n  MovieInformation,\n  AddInformation,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovie(movieId).then(data => {\n      return setMovie(data);\n    });\n  }, [movieId]);\n\n  const { poster_path, vote_average, overview, genres, original_title } = movie;\n  return (\n    <>\n      <Link to={backLink}>Go back</Link>\n      <MovieInformation>\n        <div>\n          {poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n              alt=\"poster\"\n              width=\"400\"\n            />\n          )}\n        </div>\n        <MovieDecription>\n          <h1>{original_title}</h1>\n          <p>User Score: {(vote_average * 10).toFixed()}%</p>\n          <h3>Overview </h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres?.map(genre => genre.name).join(', ')}</p>\n        </MovieDecription>\n      </MovieInformation>\n      <AddInformation>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <LinkStyled to=\"casts\">Cast</LinkStyled>\n          </li>\n          <li>\n            <LinkStyled to=\"reviews\">Reviews</LinkStyled>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </AddInformation>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'e0db436e7fdd91f6353b0e62897529c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (pathName = '', queryString = '') => {\n  try {\n    const response = await axios.get(\n      `${pathName}?api_key=${API_KEY}&${queryString}`\n    );\n\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getTrending = () => {\n  const pathName = '/trending/movie/day';\n  return fetchMovies(pathName);\n};\n\nexport const getMovie = movieId => {\n  const pathName = `movie/${movieId}`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieCast = movieId => {\n  const pathName = `movie/${movieId}/credits`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieReviews = movieId => {\n  const pathName = `movie/${movieId}/reviews`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieSearch = query => {\n  const pathName = `search/movie`;\n  const queryString = `&query=${query}`;\n  return fetchMovies(pathName, queryString);\n};\n"],"names":["LinkStyled","styled","NavLink","MovieInformation","MovieDecription","AddInformation","useState","movie","setMovie","movieId","useParams","backLink","useLocation","state","from","useEffect","getMovie","then","data","poster_path","vote_average","overview","genres","original_title","to","src","alt","width","toFixed","map","genre","name","join","Suspense","fallback","API_KEY","axios","fetchMovies","pathName","queryString","response","Error","getTrending","getMovieCast","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}