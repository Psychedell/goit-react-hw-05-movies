{"version":3,"file":"static/js/598.69d75ca9.chunk.js","mappings":"kRAEaA,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,EAAOD,EAAAA,GAAAA,GAAH,wEAKJE,EAAQF,EAAAA,GAAAA,IAAH,8DAKLG,EAAYH,EAAAA,GAAAA,IAAH,gHAOTI,EAAOJ,EAAAA,GAAAA,KAAH,+C,SC2CjB,EAvDa,WACX,OAAoCK,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRC,EAASH,EACV,GAAE,CAACA,IAEJ,IAAMG,EAAQ,mCAAG,WAAMH,GAAN,mGAEcI,EAAAA,EAAAA,IAAaJ,GAF3B,UAEPK,EAFO,OAUW,KANlBC,EAAWD,EAAaE,KAAKC,KACjC,YAEE,MADiB,CAAEC,UADkB,EAApCA,UAC6BC,KADO,EAAzBA,KACwBC,aADC,EAAnBA,aAGnB,KAEUC,OAVA,uBAWXC,QAAQC,IAAI,qDAXD,0BAcbf,EAAcO,GAdD,kDAgBbO,QAAQC,IAAI,2CAhBC,0DAAH,sDAoBd,OACE,SAACvB,EAAD,UACGO,EAAWU,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAApB,OACd,UAAClB,EAAD,YACE,SAACC,EAAD,CACEqB,IACEJ,EAAY,yCAC0BA,GAClC,+EAENK,IAAKN,EACLO,MAAM,SAER,UAACtB,EAAD,YACE,wBAAKe,IACJD,IACC,wCACa,SAACb,EAAD,UAAOa,IAAkB,YAdjCC,EADG,KAuBrB,C,6LClEKQ,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIC,EAAtB,+BAAoC,GAApC,kBAEOH,EAAAA,GAAAA,IAAA,UAClBE,EADkB,oBACEH,EADF,YACaI,IAHpB,cAEVC,EAFU,yBAMTA,EAASC,MANA,gCAQhB,IAAIC,MAAM,aARM,yDAAH,qDAYJC,EAAc,WAEzB,OAAON,EADU,sBAElB,EAEYO,EAAW,SAAA3B,GACtB,IAAMqB,EAAQ,gBAAYrB,GAC1B,OAAOoB,EAAYC,EACpB,EAEYjB,EAAe,SAAAJ,GAC1B,IAAMqB,EAAQ,gBAAYrB,EAAZ,YACd,OAAOoB,EAAYC,EACpB,EAEYO,EAAkB,SAAA5B,GAC7B,IAAMqB,EAAQ,gBAAYrB,EAAZ,YACd,OAAOoB,EAAYC,EACpB,EAEYQ,EAAiB,SAAAC,GAC5B,IACMR,EAAW,iBAAaQ,GAC9B,OAAOV,EAFO,eAEeE,EAC9B,C","sources":["components/Casts/Cast.styled.js","components/Casts/Casts.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  max-width: 200px;\n  border: 1px solid grey;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const CardThumb = styled.div`\n  height: 100%;\n  border-top: 1px solid grey;\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  font-style: italic;\n`;\n","// import { getMovieCast } from 'services/Api';\n\n// const Casts = () => {\n//   getMovieCast();\n\n//   return <p>Castsssssssssssssss text...............</p>;\n// };\n\n// export default Casts;\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/Api';\nimport { List, Item, CardThumb, Image, Span } from './Cast.styled';\n\nconst Cast = () => {\n  const [actorsList, setActorsList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    loadCast(movieId);\n  }, [movieId]);\n\n  const loadCast = async movieId => {\n    try {\n      const responseData = await getMovieCast(movieId);\n\n      const castList = responseData.cast.map(\n        ({ character, name, profile_path }) => {\n          const castItem = { character, name, profile_path };\n          return castItem;\n        }\n      );\n      if (castList.length === 0) {\n        console.log('Sorry, there are no cast information by this film');\n        return;\n      }\n      setActorsList(castList);\n    } catch (error) {\n      console.log('Something went wrong. Please try again.');\n    }\n  };\n\n  return (\n    <List>\n      {actorsList.map(({ character, name, profile_path }) => (\n        <Item key={name}>\n          <Image\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png'\n            }\n            alt={name}\n            width=\"300\"\n          ></Image>\n          <CardThumb>\n            <h3>{name}</h3>\n            {character && (\n              <p>\n                Character: <Span>{character}</Span>{' '}\n              </p>\n            )}\n          </CardThumb>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'e0db436e7fdd91f6353b0e62897529c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (pathName = '', queryString = '') => {\n  try {\n    const response = await axios.get(\n      `${pathName}?api_key=${API_KEY}&${queryString}`\n    );\n\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getTrending = () => {\n  const pathName = '/trending/movie/day';\n  return fetchMovies(pathName);\n};\n\nexport const getMovie = movieId => {\n  const pathName = `movie/${movieId}`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieCast = movieId => {\n  const pathName = `movie/${movieId}/credits`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieReviews = movieId => {\n  const pathName = `movie/${movieId}/reviews`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieSearch = query => {\n  const pathName = `search/movie`;\n  const queryString = `&query=${query}`;\n  return fetchMovies(pathName, queryString);\n};\n"],"names":["List","styled","Item","Image","CardThumb","Span","useState","actorsList","setActorsList","movieId","useParams","useEffect","loadCast","getMovieCast","responseData","castList","cast","map","character","name","profile_path","length","console","log","src","alt","width","API_KEY","axios","fetchMovies","pathName","queryString","response","data","Error","getTrending","getMovie","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}