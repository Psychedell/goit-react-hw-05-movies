{"version":3,"file":"static/js/310.a2d37aab.chunk.js","mappings":"wNAEaA,EAAOC,EAAAA,GAAAA,KAAH,0FAMJC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,EAASF,EAAAA,GAAAA,OAAH,yI,6CCsDnB,EA3De,WAAO,IAAD,EACnB,GAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAgB,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEtDC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,GAAeH,GACZI,MAAK,SAAAC,GAEJT,EAAcS,EAAKC,QACpB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,GAAE,CAACR,EAAkBL,IAetB,OACE,iCACE,UAACL,EAAD,CAAMqB,SAfW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAaF,EAAEG,OAAOC,SAASC,MAAMC,MAE3C,IAAKJ,EACH,OAAOK,MAAM,0CAEfpB,EAAgB,CAAEkB,MAAOH,IAEzBF,EAAEG,OAAOK,OACV,EAIG,WACE,SAAC5B,EAAD,CAAO6B,KAAK,OAAOC,KAAK,WACxB,SAAC7B,EAAD,CAAQ4B,KAAK,SAAb,UACE,SAAC,MAAD,UAIJ,wBAEGrB,GACCL,EAAW4B,KAAI,SAAAC,GACb,OACE,eAAkBC,MAAO,CAAEC,OAAQ,GAAnC,UACE,SAAC,KAAD,CAASC,GAAE,kBAAaH,EAAKI,IAA7B,SACGJ,EAAKK,kBAFDL,EAAKI,GAMjB,QAIV,C,6LChEKE,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,2GAAOC,EAAP,+BAAkB,GAAIC,EAAtB,+BAAoC,GAApC,kBAEOH,EAAAA,GAAAA,IAAA,UAClBE,EADkB,oBACEH,EADF,YACaI,IAHpB,cAEVC,EAFU,yBAMTA,EAAS9B,MANA,gCAQhB,IAAI+B,MAAM,aARM,yDAAH,qDAYJC,EAAc,WAEzB,OAAOL,EADU,sBAElB,EAEYM,EAAW,SAAAC,GACtB,IAAMN,EAAQ,gBAAYM,GAC1B,OAAOP,EAAYC,EACpB,EAEYO,EAAe,SAAAD,GAC1B,IAAMN,EAAQ,gBAAYM,EAAZ,YACd,OAAOP,EAAYC,EACpB,EAEYQ,EAAkB,SAAAF,GAC7B,IAAMN,EAAQ,gBAAYM,EAAZ,YACd,OAAOP,EAAYC,EACpB,EAEY9B,EAAiB,SAAAc,GAC5B,IACMiB,EAAW,iBAAajB,GAC9B,OAAOe,EAFO,eAEeE,EAC9B,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  margin: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  background: black;\n  color: white;\n  padding: 10px 15px 10px 15px;\n\n  margin: 3px;\n  border-radius: 4px;\n`;\n","import { Button, Input, Form } from './Movies.styled';\nimport { HiSearch } from 'react-icons/hi';\nimport { useSearchParams } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { getMovieSearch } from 'services/Api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n// import MyLoader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [fetchFilms, setFetchFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const [loader, setLoader] = useState('false');\n\n  const inputSearchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!inputSearchQuery) {\n      return;\n    }\n    getMovieSearch(inputSearchQuery)\n      .then(data => {\n        // setLoader('true');\n        setFetchFilms(data.results);\n      })\n      .catch(error => console.log(error));\n    // .finally(setLoader('false'));\n  }, [inputSearchQuery, fetchFilms]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const inputValue = e.target.elements.query.value;\n\n    if (!inputValue) {\n      return alert('Please enter a movie title for search!');\n    }\n    setSearchParams({ query: inputValue });\n\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Button type=\"submit\">\n          <HiSearch />\n        </Button>\n      </Form>\n\n      <ul>\n        {/* {loader === 'true' && <MyLoader />} */}\n        {inputSearchQuery &&\n          fetchFilms.map(film => {\n            return (\n              <li key={film.id} style={{ margin: 5 }}>\n                <NavLink to={`/movies/${film.id}`}>\n                  {film.original_title}\n                </NavLink>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'e0db436e7fdd91f6353b0e62897529c1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (pathName = '', queryString = '') => {\n  try {\n    const response = await axios.get(\n      `${pathName}?api_key=${API_KEY}&${queryString}`\n    );\n\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getTrending = () => {\n  const pathName = '/trending/movie/day';\n  return fetchMovies(pathName);\n};\n\nexport const getMovie = movieId => {\n  const pathName = `movie/${movieId}`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieCast = movieId => {\n  const pathName = `movie/${movieId}/credits`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieReviews = movieId => {\n  const pathName = `movie/${movieId}/reviews`;\n  return fetchMovies(pathName);\n};\n\nexport const getMovieSearch = query => {\n  const pathName = `search/movie`;\n  const queryString = `&query=${query}`;\n  return fetchMovies(pathName, queryString);\n};\n"],"names":["Form","styled","Input","Button","useState","fetchFilms","setFetchFilms","useSearchParams","searchParams","setSearchParams","inputSearchQuery","get","useEffect","getMovieSearch","then","data","results","catch","error","console","log","onSubmit","e","preventDefault","inputValue","target","elements","query","value","alert","reset","type","name","map","film","style","margin","to","id","original_title","API_KEY","axios","fetchMovies","pathName","queryString","response","Error","getTrending","getMovie","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}